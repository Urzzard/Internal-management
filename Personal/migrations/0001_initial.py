# Generated by Django 5.1.7 on 2025-05-20 00:01

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Distrito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geoname_id', models.IntegerField(db_index=True, unique=True, verbose_name='GeoName ID')),
                ('nombre', models.CharField(max_length=150, verbose_name='Nombre del Distrito')),
            ],
            options={
                'verbose_name': 'Distrito',
                'verbose_name_plural': 'Distritos',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Gremio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('responsable', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('porcentaje', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('incluir_en_cuota', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Gremio',
                'verbose_name_plural': 'Gremios',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='HorarioTrabajo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre del Horario')),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('hs_dominical', models.DecimalField(decimal_places=2, default=48.0, max_digits=4, verbose_name='Horas semanales para dominical')),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Horario de Trabajo',
                'verbose_name_plural': 'Horarios de Trabajo',
            },
        ),
        migrations.CreateModel(
            name='Pais',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geoname_id', models.IntegerField(db_index=True, unique=True, verbose_name='GeoName ID')),
                ('codigo', models.CharField(max_length=2, unique=True, verbose_name='Código ISO')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre del Pais')),
                ('divisa', models.CharField(max_length=3, verbose_name='Divisa del Pais')),
            ],
            options={
                'verbose_name': 'País',
                'verbose_name_plural': 'Paises',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Provincia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geoname_id', models.IntegerField(db_index=True, unique=True, verbose_name='GeoName ID')),
                ('nombre', models.CharField(max_length=150, verbose_name='Nombre de la Provincia')),
            ],
            options={
                'verbose_name': 'Provincia',
                'verbose_name_plural': 'Provincias',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Rango',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre del Rango')),
                ('cxh', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Costo por Hora Normal (S/.)')),
                ('descripcion', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Rango Laboral',
                'verbose_name_plural': 'Rangos Laborales',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalGremio',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre', models.CharField(db_index=True, max_length=100)),
                ('responsable', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('porcentaje', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('incluir_en_cuota', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Gremio',
                'verbose_name_plural': 'historical Gremios',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalHorarioTrabajo',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre', models.CharField(db_index=True, max_length=100, verbose_name='Nombre del Horario')),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('hs_dominical', models.DecimalField(decimal_places=2, default=48.0, max_digits=4, verbose_name='Horas semanales para dominical')),
                ('activo', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Horario de Trabajo',
                'verbose_name_plural': 'historical Horarios de Trabajo',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPais',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('geoname_id', models.IntegerField(db_index=True, verbose_name='GeoName ID')),
                ('codigo', models.CharField(db_index=True, max_length=2, verbose_name='Código ISO')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre del Pais')),
                ('divisa', models.CharField(max_length=3, verbose_name='Divisa del Pais')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical País',
                'verbose_name_plural': 'historical Paises',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRango',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre', models.CharField(db_index=True, max_length=100, verbose_name='Nombre del Rango')),
                ('cxh', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Costo por Hora Normal (S/.)')),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Rango Laboral',
                'verbose_name_plural': 'historical Rangos Laborales',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSemanaLaboralCierre',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('ano', models.PositiveBigIntegerField()),
                ('numero_semana_iso', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(53)], verbose_name='Numero de semana ISO')),
                ('fecha_inicio_semana', models.DateField()),
                ('fecha_fin_semana', models.DateField()),
                ('es_cerrada', models.BooleanField(default=False, verbose_name='Semana Cerrada para Edicion')),
                ('fecha_cierre', models.DateTimeField(blank=True, null=True)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('cerrada_por', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Cierre de Semana Laboral',
                'verbose_name_plural': 'historical Cierres de Semanas Laborales',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDetalleDiaHorario',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('dia_semana', models.IntegerField(choices=[(0, 'Lunes'), (1, 'Martes'), (2, 'Miercoles'), (3, 'Jueves'), (4, 'Viernes'), (5, 'Sabado'), (6, 'Domingo')], verbose_name='Dia de la semana')),
                ('es_laborable', models.BooleanField(default=True)),
                ('hora_entrada_teorica', models.TimeField(verbose_name='Hora Entrada Teorica')),
                ('hora_inicio_tolerancia_entrada', models.TimeField(blank=True, null=True, verbose_name='Inicio Tolerancia Entrada')),
                ('hora_fin_tolerancia_entrada', models.TimeField(blank=True, null=True, verbose_name='Fin Tolerancia Entrada')),
                ('hora_inicio_descanso_teorica', models.TimeField(blank=True, null=True, verbose_name='Inicio Descanso Teórico')),
                ('hora_fin_descanso_teorica', models.TimeField(blank=True, null=True, verbose_name='Fin Descanso Teórico')),
                ('duracion_descanso_teorico', models.PositiveIntegerField(default=0, verbose_name='Duracion Descanso')),
                ('hora_salida_teorica', models.TimeField(verbose_name='Hora Salida Teorica')),
                ('horas_jornada_teorica', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='Horas Jornada Teorica')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('horario_trabajo', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Personal.horariotrabajo')),
            ],
            options={
                'verbose_name': 'historical Detalle Dia de Horario',
                'verbose_name_plural': 'historical Detalles Dias de Horarios',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='DetalleDiaHorario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia_semana', models.IntegerField(choices=[(0, 'Lunes'), (1, 'Martes'), (2, 'Miercoles'), (3, 'Jueves'), (4, 'Viernes'), (5, 'Sabado'), (6, 'Domingo')], verbose_name='Dia de la semana')),
                ('es_laborable', models.BooleanField(default=True)),
                ('hora_entrada_teorica', models.TimeField(verbose_name='Hora Entrada Teorica')),
                ('hora_inicio_tolerancia_entrada', models.TimeField(blank=True, null=True, verbose_name='Inicio Tolerancia Entrada')),
                ('hora_fin_tolerancia_entrada', models.TimeField(blank=True, null=True, verbose_name='Fin Tolerancia Entrada')),
                ('hora_inicio_descanso_teorica', models.TimeField(blank=True, null=True, verbose_name='Inicio Descanso Teórico')),
                ('hora_fin_descanso_teorica', models.TimeField(blank=True, null=True, verbose_name='Fin Descanso Teórico')),
                ('duracion_descanso_teorico', models.PositiveIntegerField(default=0, verbose_name='Duracion Descanso')),
                ('hora_salida_teorica', models.TimeField(verbose_name='Hora Salida Teorica')),
                ('horas_jornada_teorica', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='Horas Jornada Teorica')),
                ('horario_trabajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detalles_dias', to='Personal.horariotrabajo')),
            ],
            options={
                'verbose_name': 'Detalle Dia de Horario',
                'verbose_name_plural': 'Detalles Dias de Horarios',
                'ordering': ['horario_trabajo', 'dia_semana'],
                'unique_together': {('horario_trabajo', 'dia_semana')},
            },
        ),
        migrations.CreateModel(
            name='HistoricalRegion',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('geoname_id', models.IntegerField(db_index=True, verbose_name='GeoName ID')),
                ('nombre', models.CharField(max_length=150, verbose_name='Nombre de la Region/Departamento')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('pais', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Personal.pais')),
            ],
            options={
                'verbose_name': 'historical Región/Departamento',
                'verbose_name_plural': 'historical Regiones/Departamentos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Personal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('a_paterno', models.CharField(max_length=100)),
                ('a_materno', models.CharField(max_length=100)),
                ('dni', models.CharField(max_length=8, unique=True)),
                ('dni_img', models.ImageField(blank=True, null=True, upload_to='dni/')),
                ('f_nacimiento', models.DateField()),
                ('f_ingreso', models.DateField()),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('rfid_uid', models.CharField(blank=True, db_index=True, max_length=50, null=True, unique=True, verbose_name='UID Tarjeta RFID')),
                ('cuenta_corriente', models.CharField(blank=True, max_length=25, null=True)),
                ('cci', models.CharField(blank=True, max_length=30, null=True)),
                ('t_zapato', models.CharField(blank=True, max_length=4, null=True)),
                ('t_polo', models.CharField(blank=True, max_length=4, null=True)),
                ('t_pantalon', models.CharField(blank=True, max_length=4, null=True)),
                ('celular', models.CharField(blank=True, max_length=15, null=True)),
                ('nro_emergencia', models.CharField(blank=True, max_length=15, null=True)),
                ('direccion', models.CharField(blank=True, max_length=255, null=True)),
                ('e_civil', models.CharField(blank=True, choices=[('Solter@', 'Solter@'), ('Casad@', 'Casad@'), ('Divorciad@', 'Divorciad@'), ('Viud@', 'Viud@'), ('Conviviente', 'Conviviente')], max_length=20, null=True)),
                ('sexo', models.CharField(choices=[('Masculino', 'Masculino'), ('Femenino', 'Femenino')], max_length=20)),
                ('estado', models.CharField(choices=[('Activo', 'Activo'), ('Inactivo', 'Inactivo'), ('Despedido', 'Despedido'), ('Vacaciones', 'Vacaciones')], max_length=20)),
                ('distrito', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='personal_distrito', to='Personal.distrito')),
                ('pais', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='personal_pais', to='Personal.pais')),
                ('provincia', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='personal_provincia', to='Personal.provincia')),
            ],
            options={
                'verbose_name': 'Personal',
                'verbose_name_plural': 'Personal',
                'ordering': ['a_paterno', 'a_materno', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='Marcacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_hora_marcada', models.DateTimeField(verbose_name='Fecha y Hora de la Marcacion Original')),
                ('fecha_hora_efectiva', models.DateTimeField(verbose_name='Fecha y Hora Efectiva (puede ser corregida)')),
                ('tipo_marcacion', models.CharField(choices=[('ENTRADA', 'Entrada'), ('INICIO_DESCANSO', 'Inicio Descanso'), ('FIN_DESCANSO', 'Fin Descanso'), ('SALIDA', 'Salida')], max_length=20)),
                ('metodo_marcacion', models.CharField(choices=[('MANUAL_WEB', 'Manual (Sistema Web)'), ('MANUAL_SUPERVISOR', 'Manual (Supervisor)'), ('BIOMETRICO_FACIAL', 'Biométrico Facial'), ('BIOMETRICO_HUELLA', 'Biométrico Huella'), ('TARJETA_RFID', 'Tarjeta RFID/NFC'), ('APP_MOVIL', 'App Móvil'), ('SISTEMA', 'Sistema (Automático)')], max_length=25)),
                ('origen_marcacion', models.CharField(blank=True, max_length=100, null=True, verbose_name='Origen/Dispositivo')),
                ('foto_evidencia', models.ImageField(blank=True, null=True, upload_to='asistencia/evidencias/%Y/%m/%d/')),
                ('latitud', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitud', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_edicion', models.DateTimeField(blank=True, null=True)),
                ('motivo_edicion', models.TextField(blank=True, null=True)),
                ('es_correccion_manual', models.BooleanField(default=False, help_text='Indica si esta marcación fue ajustada manualmente.')),
                ('creado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='marcaciones_creadas', to=settings.AUTH_USER_MODEL)),
                ('editado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='marcaciones_editadas', to=settings.AUTH_USER_MODEL)),
                ('personal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='marcaciones', to='Personal.personal')),
            ],
            options={
                'verbose_name': 'Marcacion de Asistencia',
                'verbose_name_plural': 'Marcaciones de Asistencia',
                'ordering': ['personal', 'fecha_hora_efectiva'],
            },
        ),
        migrations.CreateModel(
            name='JornadaLaboral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('minutos_tardanza_calculados', models.PositiveIntegerField(default=0)),
                ('horas_normales_calculadas', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('horas_extra_potenciales', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('horas_extra_aprobadas', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('estado_marcaciones', models.CharField(choices=[('COMPLETA', 'Completa'), ('PENDIENTE_ENTRADA', 'Pendiente Entrada'), ('PENDIENTE_SALIDA', 'Pendiente Salida'), ('DESCANSO_INCOMPLETO', 'Descanso Incompleto'), ('REQUIERE_REVISION', 'Requiere Revisión Manual')], default='PENDIENTE_ENTRADA', max_length=30)),
                ('estado_jornada', models.CharField(choices=[('PROGRAMADA', 'Programada'), ('EN_CURSO', 'En Curso'), ('PRESENTE_COMPLETA', 'Presente (Completa)'), ('PRESENTE_INCOMPLETA', 'Presente (Marc. Incompleta)'), ('TARDANZA', 'Tardanza'), ('CON_HE_PENDIENTE', 'Con Horas Extra Pendientes'), ('CON_HE_APROBADA', 'Con Horas Extra Aprobadas'), ('AUSENTE_NJ', 'Ausente (No Justificado)'), ('AUSENTE_J', 'Ausente (Justificado)'), ('FALTA_REGISTRADA', 'Falta Registrada'), ('PERMISO_CG', 'Permiso (Con Goce)'), ('PERMISO_SG', 'Permiso (Sin Goce)'), ('VACACIONES', 'Vacaciones'), ('FERIADO_LABORADO', 'Feriado Laborado'), ('FERIADO_NO_LABORADO', 'Feriado No Laborado'), ('SUSPENSION', 'Suspensión')], default='PROGRAMADA', max_length=30)),
                ('aplica_dominical_calculado', models.BooleanField(default=False, help_text='Se determina el cierre semanal si cumplio horas.')),
                ('observaciones_supervisor', models.TextField(blank=True, null=True)),
                ('es_cerrada', models.BooleanField(default=False, help_text='Indica si la jornada pertenece a una semana ya cerrada.')),
                ('detalle_dia_horario_aplicado', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='jornadas_aplicadas', to='Personal.detallediahorario')),
                ('marcacion_entrada', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jornada_como_entrada', to='Personal.marcacion')),
                ('marcacion_fin_descanso', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jornada_como_fin_descanso', to='Personal.marcacion')),
                ('marcacion_inicio_descanso', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jornada_como_inicio_descanso', to='Personal.marcacion')),
                ('marcacion_salida', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jornada_como_salida', to='Personal.marcacion')),
                ('personal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jornadas_laborales', to='Personal.personal')),
            ],
            options={
                'verbose_name': 'Jornada Laboral',
                'verbose_name_plural': 'Jornadas Laborales',
                'ordering': ['-fecha', 'personal'],
                'unique_together': {('personal', 'fecha')},
            },
        ),
        migrations.CreateModel(
            name='Incidencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_incidencia', models.DateField(verbose_name='Fecha de la Incidencia')),
                ('tipo_incidencia', models.CharField(choices=[('HORA_EXTRA', 'Solicitud/Aprobación Hora Extra'), ('TARDANZA_JUSTIFICADA', 'Justificación Tardanza'), ('AUSENCIA_JUSTIFICADA', 'Justificación Ausencia'), ('PERMISO_CG', 'Permiso con Goce de Sueldo'), ('PERMISO_SG', 'Permiso sin Goce de Sueldo'), ('AJUSTE_MARCACION', 'Corrección/Ajuste de Marcación'), ('MEMORANDO', 'Memorando/Llamada de Atención'), ('OTRO', 'Otro Tipo de Incidencia')], max_length=30)),
                ('descripcion_solicitud', models.TextField(verbose_name='Descripcion/Motivo de la Solicitud')),
                ('documento_adjunto', models.FileField(blank=True, null=True, upload_to='asistencia/incidencias_adjuntos/%Y/%m/')),
                ('fh_inicio_he', models.DateTimeField(blank=True, null=True, verbose_name='Inicio Hora Extra')),
                ('fh_fin_he', models.DateTimeField(blank=True, null=True, verbose_name='Fin Hora Extra')),
                ('hs_o_afectadas', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Horas Solicitadas/Afectadas')),
                ('estado_aprobacion', models.CharField(choices=[('PENDIENTE', 'Pendiente de Revisión'), ('APROBADA', 'Aprobada'), ('RECHAZADA', 'Rechazada'), ('EN_PROCESO', 'En Proceso'), ('CERRADA', 'Cerrada/Resuelta')], default='PENDIENTE', max_length=20)),
                ('fecha_ap_re', models.DateTimeField(blank=True, null=True)),
                ('comentarios_aprobacion', models.TextField(blank=True, null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('ap_re_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incidencias_gestionadas', to=settings.AUTH_USER_MODEL)),
                ('creado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incidencias_creadas', to=settings.AUTH_USER_MODEL)),
                ('jornada_laboral', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incidencias', to='Personal.jornadalaboral')),
                ('personal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incidencias_personales', to='Personal.personal')),
            ],
            options={
                'verbose_name': 'Incidencia de Asistencia',
                'verbose_name_plural': 'Incidencias de Asistencia',
                'ordering': ['-fecha_incidencia', '-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalStaff',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('cargo', models.CharField(max_length=200)),
                ('rm', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Remuneración Mensual')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('personal', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Personal.personal')),
            ],
            options={
                'verbose_name': 'historical Staff',
                'verbose_name_plural': 'historical Staff',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMarcacion',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('fecha_hora_marcada', models.DateTimeField(verbose_name='Fecha y Hora de la Marcacion Original')),
                ('fecha_hora_efectiva', models.DateTimeField(verbose_name='Fecha y Hora Efectiva (puede ser corregida)')),
                ('tipo_marcacion', models.CharField(choices=[('ENTRADA', 'Entrada'), ('INICIO_DESCANSO', 'Inicio Descanso'), ('FIN_DESCANSO', 'Fin Descanso'), ('SALIDA', 'Salida')], max_length=20)),
                ('metodo_marcacion', models.CharField(choices=[('MANUAL_WEB', 'Manual (Sistema Web)'), ('MANUAL_SUPERVISOR', 'Manual (Supervisor)'), ('BIOMETRICO_FACIAL', 'Biométrico Facial'), ('BIOMETRICO_HUELLA', 'Biométrico Huella'), ('TARJETA_RFID', 'Tarjeta RFID/NFC'), ('APP_MOVIL', 'App Móvil'), ('SISTEMA', 'Sistema (Automático)')], max_length=25)),
                ('origen_marcacion', models.CharField(blank=True, max_length=100, null=True, verbose_name='Origen/Dispositivo')),
                ('foto_evidencia', models.TextField(blank=True, max_length=100, null=True)),
                ('latitud', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitud', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('fecha_creacion', models.DateTimeField(blank=True, editable=False)),
                ('fecha_edicion', models.DateTimeField(blank=True, null=True)),
                ('motivo_edicion', models.TextField(blank=True, null=True)),
                ('es_correccion_manual', models.BooleanField(default=False, help_text='Indica si esta marcación fue ajustada manualmente.')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('creado_por', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('editado_por', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('personal', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Personal.personal')),
            ],
            options={
                'verbose_name': 'historical Marcacion de Asistencia',
                'verbose_name_plural': 'historical Marcaciones de Asistencia',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalJornadaLaboral',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('minutos_tardanza_calculados', models.PositiveIntegerField(default=0)),
                ('horas_normales_calculadas', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('horas_extra_potenciales', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('horas_extra_aprobadas', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('estado_marcaciones', models.CharField(choices=[('COMPLETA', 'Completa'), ('PENDIENTE_ENTRADA', 'Pendiente Entrada'), ('PENDIENTE_SALIDA', 'Pendiente Salida'), ('DESCANSO_INCOMPLETO', 'Descanso Incompleto'), ('REQUIERE_REVISION', 'Requiere Revisión Manual')], default='PENDIENTE_ENTRADA', max_length=30)),
                ('estado_jornada', models.CharField(choices=[('PROGRAMADA', 'Programada'), ('EN_CURSO', 'En Curso'), ('PRESENTE_COMPLETA', 'Presente (Completa)'), ('PRESENTE_INCOMPLETA', 'Presente (Marc. Incompleta)'), ('TARDANZA', 'Tardanza'), ('CON_HE_PENDIENTE', 'Con Horas Extra Pendientes'), ('CON_HE_APROBADA', 'Con Horas Extra Aprobadas'), ('AUSENTE_NJ', 'Ausente (No Justificado)'), ('AUSENTE_J', 'Ausente (Justificado)'), ('FALTA_REGISTRADA', 'Falta Registrada'), ('PERMISO_CG', 'Permiso (Con Goce)'), ('PERMISO_SG', 'Permiso (Sin Goce)'), ('VACACIONES', 'Vacaciones'), ('FERIADO_LABORADO', 'Feriado Laborado'), ('FERIADO_NO_LABORADO', 'Feriado No Laborado'), ('SUSPENSION', 'Suspensión')], default='PROGRAMADA', max_length=30)),
                ('aplica_dominical_calculado', models.BooleanField(default=False, help_text='Se determina el cierre semanal si cumplio horas.')),
                ('observaciones_supervisor', models.TextField(blank=True, null=True)),
                ('es_cerrada', models.BooleanField(default=False, help_text='Indica si la jornada pertenece a una semana ya cerrada.')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('detalle_dia_horario_aplicado', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Personal.detallediahorario')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('marcacion_entrada', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Personal.marcacion')),
                ('marcacion_fin_descanso', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Personal.marcacion')),
                ('marcacion_inicio_descanso', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Personal.marcacion')),
                ('marcacion_salida', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Personal.marcacion')),
                ('personal', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Personal.personal')),
            ],
            options={
                'verbose_name': 'historical Jornada Laboral',
                'verbose_name_plural': 'historical Jornadas Laborales',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalIncidencia',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('fecha_incidencia', models.DateField(verbose_name='Fecha de la Incidencia')),
                ('tipo_incidencia', models.CharField(choices=[('HORA_EXTRA', 'Solicitud/Aprobación Hora Extra'), ('TARDANZA_JUSTIFICADA', 'Justificación Tardanza'), ('AUSENCIA_JUSTIFICADA', 'Justificación Ausencia'), ('PERMISO_CG', 'Permiso con Goce de Sueldo'), ('PERMISO_SG', 'Permiso sin Goce de Sueldo'), ('AJUSTE_MARCACION', 'Corrección/Ajuste de Marcación'), ('MEMORANDO', 'Memorando/Llamada de Atención'), ('OTRO', 'Otro Tipo de Incidencia')], max_length=30)),
                ('descripcion_solicitud', models.TextField(verbose_name='Descripcion/Motivo de la Solicitud')),
                ('documento_adjunto', models.TextField(blank=True, max_length=100, null=True)),
                ('fh_inicio_he', models.DateTimeField(blank=True, null=True, verbose_name='Inicio Hora Extra')),
                ('fh_fin_he', models.DateTimeField(blank=True, null=True, verbose_name='Fin Hora Extra')),
                ('hs_o_afectadas', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Horas Solicitadas/Afectadas')),
                ('estado_aprobacion', models.CharField(choices=[('PENDIENTE', 'Pendiente de Revisión'), ('APROBADA', 'Aprobada'), ('RECHAZADA', 'Rechazada'), ('EN_PROCESO', 'En Proceso'), ('CERRADA', 'Cerrada/Resuelta')], default='PENDIENTE', max_length=20)),
                ('fecha_ap_re', models.DateTimeField(blank=True, null=True)),
                ('comentarios_aprobacion', models.TextField(blank=True, null=True)),
                ('fecha_creacion', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('ap_re_por', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('creado_por', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('jornada_laboral', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Personal.jornadalaboral')),
                ('personal', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Personal.personal')),
            ],
            options={
                'verbose_name': 'historical Incidencia de Asistencia',
                'verbose_name_plural': 'historical Incidencias de Asistencia',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAsignacionHorario',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('fecha_inicio', models.DateField(verbose_name='Fecha de Inicio de Asignacion')),
                ('fecha_fin', models.DateField(blank=True, null=True, verbose_name='Fecha de Fin de Asignacion')),
                ('activo', models.BooleanField(default=True, help_text='Indica si esta asignación de horario está actualmente vigente.')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('horario_trabajo', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Personal.horariotrabajo')),
                ('personal', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Personal.personal')),
            ],
            options={
                'verbose_name': 'historical Asignacion de Horario',
                'verbose_name_plural': 'historical Asignaciones de Horarios',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='AsignacionHorario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateField(verbose_name='Fecha de Inicio de Asignacion')),
                ('fecha_fin', models.DateField(blank=True, null=True, verbose_name='Fecha de Fin de Asignacion')),
                ('activo', models.BooleanField(default=True, help_text='Indica si esta asignación de horario está actualmente vigente.')),
                ('horario_trabajo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='personal_asignado', to='Personal.horariotrabajo')),
                ('personal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asignaciones_horario', to='Personal.personal')),
            ],
            options={
                'verbose_name': 'Asignacion de Horario',
                'verbose_name_plural': 'Asignaciones de Horarios',
                'ordering': ['-fecha_inicio', 'personal'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalDistrito',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('geoname_id', models.IntegerField(db_index=True, verbose_name='GeoName ID')),
                ('nombre', models.CharField(max_length=150, verbose_name='Nombre del Distrito')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('provincia', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Personal.provincia')),
            ],
            options={
                'verbose_name': 'historical Distrito',
                'verbose_name_plural': 'historical Distritos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='distrito',
            name='provincia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='distritos', to='Personal.provincia'),
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geoname_id', models.IntegerField(db_index=True, unique=True, verbose_name='GeoName ID')),
                ('nombre', models.CharField(max_length=150, verbose_name='Nombre de la Region/Departamento')),
                ('pais', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='regiones', to='Personal.pais')),
            ],
            options={
                'verbose_name': 'Región/Departamento',
                'verbose_name_plural': 'Regiones/Departamentos',
                'ordering': ['nombre'],
            },
        ),
        migrations.AddField(
            model_name='provincia',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='provincias', to='Personal.region'),
        ),
        migrations.AddField(
            model_name='personal',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='personal_region', to='Personal.region'),
        ),
        migrations.CreateModel(
            name='HistoricalProvincia',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('geoname_id', models.IntegerField(db_index=True, verbose_name='GeoName ID')),
                ('nombre', models.CharField(max_length=150, verbose_name='Nombre de la Provincia')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('region', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Personal.region')),
            ],
            options={
                'verbose_name': 'historical Provincia',
                'verbose_name_plural': 'historical Provincias',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPersonal',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('a_paterno', models.CharField(max_length=100)),
                ('a_materno', models.CharField(max_length=100)),
                ('dni', models.CharField(db_index=True, max_length=8)),
                ('dni_img', models.TextField(blank=True, max_length=100, null=True)),
                ('f_nacimiento', models.DateField()),
                ('f_ingreso', models.DateField()),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('rfid_uid', models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='UID Tarjeta RFID')),
                ('cuenta_corriente', models.CharField(blank=True, max_length=25, null=True)),
                ('cci', models.CharField(blank=True, max_length=30, null=True)),
                ('t_zapato', models.CharField(blank=True, max_length=4, null=True)),
                ('t_polo', models.CharField(blank=True, max_length=4, null=True)),
                ('t_pantalon', models.CharField(blank=True, max_length=4, null=True)),
                ('celular', models.CharField(blank=True, max_length=15, null=True)),
                ('nro_emergencia', models.CharField(blank=True, max_length=15, null=True)),
                ('direccion', models.CharField(blank=True, max_length=255, null=True)),
                ('e_civil', models.CharField(blank=True, choices=[('Solter@', 'Solter@'), ('Casad@', 'Casad@'), ('Divorciad@', 'Divorciad@'), ('Viud@', 'Viud@'), ('Conviviente', 'Conviviente')], max_length=20, null=True)),
                ('sexo', models.CharField(choices=[('Masculino', 'Masculino'), ('Femenino', 'Femenino')], max_length=20)),
                ('estado', models.CharField(choices=[('Activo', 'Activo'), ('Inactivo', 'Inactivo'), ('Despedido', 'Despedido'), ('Vacaciones', 'Vacaciones')], max_length=20)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('distrito', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Personal.distrito')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('pais', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Personal.pais')),
                ('provincia', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Personal.provincia')),
                ('region', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Personal.region')),
            ],
            options={
                'verbose_name': 'historical Personal',
                'verbose_name_plural': 'historical Personal',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCalendarioFeriado',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('fecha', models.DateField(db_index=True)),
                ('descripcion', models.CharField(max_length=255)),
                ('tipo', models.CharField(choices=[('NACIONAL', 'Nacional'), ('REGIONAL', 'Regional'), ('LOCAL', 'Local/Provincial'), ('EMPRESA', 'Específico de Empresa')], default='NACIONAL', max_length=15)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('pais', models.ForeignKey(blank=True, db_constraint=False, help_text='Pais si el feriado es nacional o base para regional/local', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Personal.pais')),
                ('region', models.ForeignKey(blank=True, db_constraint=False, help_text='Region si el feriado es regional', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Personal.region')),
            ],
            options={
                'verbose_name': 'historical Feriado',
                'verbose_name_plural': 'historical Feriados',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='CalendarioFeriado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(unique=True)),
                ('descripcion', models.CharField(max_length=255)),
                ('tipo', models.CharField(choices=[('NACIONAL', 'Nacional'), ('REGIONAL', 'Regional'), ('LOCAL', 'Local/Provincial'), ('EMPRESA', 'Específico de Empresa')], default='NACIONAL', max_length=15)),
                ('pais', models.ForeignKey(blank=True, help_text='Pais si el feriado es nacional o base para regional/local', null=True, on_delete=django.db.models.deletion.CASCADE, to='Personal.pais')),
                ('region', models.ForeignKey(blank=True, help_text='Region si el feriado es regional', null=True, on_delete=django.db.models.deletion.CASCADE, to='Personal.region')),
            ],
            options={
                'verbose_name': 'Feriado',
                'verbose_name_plural': 'Feriados',
                'ordering': ['fecha'],
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cargo', models.CharField(max_length=200)),
                ('rm', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Remuneración Mensual')),
                ('personal', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='staff_info', to='Personal.personal')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='staff_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Staff',
                'verbose_name_plural': 'Staff',
            },
        ),
        migrations.CreateModel(
            name='PCampo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('especialidad', models.CharField(blank=True, choices=[('CAR', 'Carpintería'), ('FIE', 'Fierrería'), ('ALB', 'Albañilería'), ('ELE', 'Electricidad'), ('SAN', 'Sanitario/Gasfitería'), ('PIN', 'Pintura'), ('OPM', 'Operador Maquinaria'), ('AYU', 'Ayudante General'), ('TOP', 'Topografía'), ('GEN', 'General/Peón'), ('VIG', 'Vigía'), ('SOL', 'Soldador'), ('MEC', 'Mecánico'), ('CHO', 'Chófer/Conductor'), ('OTR', 'Otro')], max_length=3, null=True)),
                ('retcc_img', models.ImageField(blank=True, null=True, upload_to='retcc/', verbose_name='Imagen Carnet RETCC')),
                ('retcc_estado', models.CharField(choices=[('Vigente', 'Vigente'), ('Vencido', 'Vencido'), ('No tiene', 'No tiene'), ('En Tramite', 'En Trámite')], default='No tiene', max_length=20)),
                ('ruc', models.CharField(blank=True, max_length=11, null=True, verbose_name='RUC Obrero')),
                ('c_sol', models.CharField(blank=True, max_length=50, null=True, verbose_name='Clave SOL Obrero')),
                ('sdni_img_hijo', models.ImageField(blank=True, null=True, upload_to='SHdni/', verbose_name='DNI del hijo')),
                ('fecha_asignacion', models.DateField(default=django.utils.timezone.now, verbose_name='Fecha de Asignación a Campo')),
                ('activo_en_campo', models.BooleanField(default=True, verbose_name='Actualmente Activo en Campo')),
                ('gremio', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='obreros_gremio', to='Personal.gremio')),
                ('personal', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='obrero_info', to='Personal.personal')),
                ('rango', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='obreros_rango', to='Personal.rango')),
                ('srecomendado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recomendados_staff', to='Personal.staff', verbose_name='Personal recomendado por Staff')),
            ],
            options={
                'verbose_name': 'Personal de Campo',
                'verbose_name_plural': 'Personal de Campo',
                'ordering': ['personal__a_paterno'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalPCampo',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('especialidad', models.CharField(blank=True, choices=[('CAR', 'Carpintería'), ('FIE', 'Fierrería'), ('ALB', 'Albañilería'), ('ELE', 'Electricidad'), ('SAN', 'Sanitario/Gasfitería'), ('PIN', 'Pintura'), ('OPM', 'Operador Maquinaria'), ('AYU', 'Ayudante General'), ('TOP', 'Topografía'), ('GEN', 'General/Peón'), ('VIG', 'Vigía'), ('SOL', 'Soldador'), ('MEC', 'Mecánico'), ('CHO', 'Chófer/Conductor'), ('OTR', 'Otro')], max_length=3, null=True)),
                ('retcc_img', models.TextField(blank=True, max_length=100, null=True, verbose_name='Imagen Carnet RETCC')),
                ('retcc_estado', models.CharField(choices=[('Vigente', 'Vigente'), ('Vencido', 'Vencido'), ('No tiene', 'No tiene'), ('En Tramite', 'En Trámite')], default='No tiene', max_length=20)),
                ('ruc', models.CharField(blank=True, max_length=11, null=True, verbose_name='RUC Obrero')),
                ('c_sol', models.CharField(blank=True, max_length=50, null=True, verbose_name='Clave SOL Obrero')),
                ('sdni_img_hijo', models.TextField(blank=True, max_length=100, null=True, verbose_name='DNI del hijo')),
                ('fecha_asignacion', models.DateField(default=django.utils.timezone.now, verbose_name='Fecha de Asignación a Campo')),
                ('activo_en_campo', models.BooleanField(default=True, verbose_name='Actualmente Activo en Campo')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('gremio', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Personal.gremio')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('personal', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Personal.personal')),
                ('rango', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Personal.rango')),
                ('srecomendado', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Personal.staff', verbose_name='Personal recomendado por Staff')),
            ],
            options={
                'verbose_name': 'historical Personal de Campo',
                'verbose_name_plural': 'historical Personal de Campo',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='SemanaLaboralCierre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ano', models.PositiveBigIntegerField()),
                ('numero_semana_iso', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(53)], verbose_name='Numero de semana ISO')),
                ('fecha_inicio_semana', models.DateField()),
                ('fecha_fin_semana', models.DateField()),
                ('es_cerrada', models.BooleanField(default=False, verbose_name='Semana Cerrada para Edicion')),
                ('fecha_cierre', models.DateTimeField(blank=True, null=True)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('cerrada_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='semanas_cerradas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Cierre de Semana Laboral',
                'verbose_name_plural': 'Cierres de Semanas Laborales',
                'ordering': ['-ano', '-numero_semana_iso'],
                'unique_together': {('ano', 'numero_semana_iso')},
            },
        ),
    ]
